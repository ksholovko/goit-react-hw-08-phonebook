{"version":3,"file":"static/js/547.c9adc399.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/contactForm.module.css?2173","redux/Contacts/selectors.js","components/ContactForm/contactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/contactItem.module.css?5620","components/ContactList/contactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/conctactList.module.css?2645","components/ContactList/conctactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/filter.module.css?e01c","components/Filter/filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contactForm_form__3ay0L\",\"label\":\"contactForm_label__WakW9\",\"formInput\":\"contactForm_formInput__G+R7H\",\"button\":\"contactForm_button__JixDz\"};","\nexport const selectContacts = (state) => state.phonebook.contacts.items;\n    \nexport const selectFilter = (state) => state.filter.filters;\n\nexport const selectIsLoading = (state) => state.phonebook.contacts.isLoading;\n","import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact, fetchContacts } from \"redux/Contacts/operations\";\nimport { nanoid } from \"nanoid\";\nimport css from \"./contactForm.module.css\"\nimport { selectContacts } from \"redux/Contacts/selectors\";\n\nexport default function ContactForm() {\n    \n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const nameInputId = nanoid();\n    const telInputId = nanoid();\n\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch])\n\n    const handleInputChange = event => {\n    \n        const { name, value } = event.target;\n\n        switch (name) {\n            case \"name\":\n                setName(value);\n                break;\n        \n            case \"number\":\n                setNumber(value);\n                break;\n         \n            default:\n                break;\n        }\n    }\n\n    const handleSubmit = event => {\n    \n        event.preventDefault();\n        const newContact = { name, number };\n        \n        if (contacts.find(contact => contact.name.toLowerCase() === newContact.name.toLowerCase())) {\n    alert(`${newContact.name} is already in the contacts`);\n    return;\n        }\n        \n        dispatch(addContact(newContact));\n      setName('');\n      setNumber('');\n    }\n\nreturn ( \n            \n    <form className={css.form} onSubmit={handleSubmit}>\n        <label htmlFor={nameInputId} className={css.label}> Name </label>\n        <input className={css.formInput} id={nameInputId} type=\"text\" name=\"name\" value={name} required onChange={handleInputChange} />\n        <label htmlFor={telInputId} className={css.label}>Number</label>\n        <input className={css.formInput} id={telInputId} type=\"tel\" name=\"number\" value={number} required onChange={handleInputChange} />     \n        <button className={css.button} type=\"submit\">Add contact</button>\n    </form>\n    \n        )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"contactItem_contact__UA9J9\",\"button\":\"contactItem_button__hluQ2\"};","import css from \"./contactItem.module.css\";\n\nexport default function contactItem({name, number, onDelete }) {\n  return (\n    <>\n      <span className={css.contact}>{name} {number} </span> <button className={css.button} onClick={onDelete}>Delete</button>\n    </>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"conctactList_contactItem__F3PXh\"};","import { useDispatch, useSelector } from 'react-redux'\nimport { deleteContact } from 'redux/Contacts/operations'\nimport ContactItem from \"./contactItem\"\nimport css from \"./conctactList.module.css\"\nimport { selectContacts, selectFilter, selectIsLoading } from 'redux/Contacts/selectors';\n\nexport default function ContactList() {\n\n    const dispatch = useDispatch();\n\n    const contacts = useSelector(selectContacts);\n    const isLoading = useSelector(selectIsLoading);\n\n    const filter = useSelector(selectFilter);\n\n    const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n\n    const deleteContactItem = (contactId) => {\n        \n        dispatch(deleteContact(contactId));\n\n   }\n\n    return (\n        <div>\n            {isLoading ? (\n                <div>Loading...</div>\n            ) : (\n                <ul className={css.contactList}>\n                    {filteredContacts.map(({ id, name, number }) => (\n                        <li key={id} className={css.contactItem}>\n                            <ContactItem id={id} name={name} number={number} onDelete={() => deleteContactItem(id)} />\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"filter_container__8MH92\",\"label\":\"filter_label__nHxuJ\",\"filterInput\":\"filter_filterInput__2T6yn\"};","\nimport { useDispatch } from 'react-redux';\nimport { filterChange } from 'redux/Contacts/filtersSlice';\n\nimport { nanoid } from \"nanoid\";\nimport css from \"./filter.module.css\";\n\nexport default function Filter() {\n  \n  const dispatch = useDispatch();\n  \n  const inputId = nanoid();\n\n  const handleFilterChange = (event) => {\n    dispatch(filterChange(event.target.value));\n  }\n\nreturn (\n    <div className={css.container}>\n      <label className={css.label} htmlFor={inputId}>Find contacts by name</label>\n      <input className={css.filterInput} type=\"text\" name=\"filter\" id={inputId} onChange={handleFilterChange} />\n    </div>\n        )\n}\n    ","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__WzsIr\",\"title\":\"Contacts_title__LxdN4\"};","import ContactForm from \"components/ContactForm\"\nimport ContactList from \"components/ContactList\"\nimport Filter from \"components/Filter\"\nimport css from \"./Contacts.module.css\"\n\nconst Contacts = () => {\n\n    return (\n\n        <div className={css.container}>\n        \n        <h1 className={css.title}>Phonebook</h1>\n        \n        <ContactForm />\n        \n        <h1 className={css.title}>Contacts</h1>\n\n        <Filter/>\n        \n        <ContactList />\n       \n          </div>\n    )\n\n\n}\n\nexport default Contacts;"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","selectContacts","state","phonebook","contacts","items","selectFilter","filter","filters","selectIsLoading","isLoading","ContactForm","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","nameInputId","telInputId","useEffect","fetchContacts","handleInputChange","event","target","value","className","css","onSubmit","preventDefault","newContact","find","contact","toLowerCase","alert","addContact","htmlFor","type","required","onChange","contactItem","onDelete","onClick","ContactList","filteredContacts","includes","map","contactId","deleteContact","Filter","inputId","filterChange"],"sourceRoot":""}